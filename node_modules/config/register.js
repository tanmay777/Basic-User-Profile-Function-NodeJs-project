var crypto=require('crypto');
var rand=require('csprng');
var mongoose=require('mongoose');
var user=require('config/models');

exports.register=function(email,password,callback){
	//The indexOf() method returns the position of the 
	//first occurrence of a specified value in a string.
	//Note: This method returns -1 if the value to search for never occurs.
	//0 is false and 1 is true

	//I have no idea what the below logic does. Like what is it assigning in conditional statement.
	//I guess these assignments statements in conditional statement always lead to true value.
	console.log(email);
	console.log(validateEmail(email));
	if(validateEmail(email)){
		//The match() method searches a string for a match against a regular expression, 
		//and returns the matches, as an Array object.
		//https://www.w3schools.com/jsref/jsref_obj_regexp.asp
		if(password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)&&password.length>4&&password.match(/[0-9]/)&&password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)){
			//rand function passes the number of required bits, and the radix of the output.
			var temp=rand(160,36);
			var newpass=temp+password;
			var token=crypto.createHash('sha512').update(email+rand).digest("hex");
			var hashed_password=crypto.createHash('sha512').update(newpass).digest("hex");

			var newuser=new user({
				token:token,
				email:email,
				hashed_password:hashed_password,
				salt:temp
			});

			user.find({email:email},function(err,users){
				var len=users.length;
				if(len==0){
					newuser.save(function(err){
					callback({'response':"Successfully Registered"});
					});
				}else{
					callback({'response':"Email already Registered"});
				}
			});
		}else{
			callback({'response':"password weak"});
		}
	} else{
		callback({'response':"Email not valid"});
	}
}

function validateEmail(email) {
var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
return re.test(email);
}
	
